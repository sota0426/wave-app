{"version":3,"file":"static/js/162.81c3605b.chunk.js","mappings":"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","sources":["../node_modules/@radix-ui/react-label/src/Label.tsx","../node_modules/@radix-ui/react-primitive/src/Primitive.tsx","../node_modules/@radix-ui/number/src/number.ts","../node_modules/@radix-ui/primitive/src/primitive.tsx","../node_modules/@radix-ui/react-context/src/createContext.tsx","../node_modules/@radix-ui/react-use-callback-ref/src/useCallbackRef.tsx","../node_modules/@radix-ui/react-use-controllable-state/src/useControllableState.tsx","../node_modules/@radix-ui/react-direction/src/Direction.tsx","../node_modules/@radix-ui/react-use-layout-effect/src/useLayoutEffect.tsx","../node_modules/@radix-ui/react-collection/node_modules/@radix-ui/react-context/src/createContext.tsx","../node_modules/@radix-ui/react-slider/src/Slider.tsx","../node_modules/@radix-ui/react-collection/src/Collection.tsx","../node_modules/@radix-ui/react-use-size/src/useSize.tsx","../node_modules/@radix-ui/react-use-previous/src/usePrevious.tsx","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/get-value-transition.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-flags.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/memo-supports.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-linear-easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/linear.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/attach-timeline.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","../node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/create.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/utils/use-animation-frame.mjs"],"sourcesContent":["import * as React from 'react';\nimport { Primitive } from '@radix-ui/react-primitive';\n\n/* -------------------------------------------------------------------------------------------------\n * Label\n * -----------------------------------------------------------------------------------------------*/\n\nconst NAME = 'Label';\n\ntype LabelElement = React.ElementRef<typeof Primitive.label>;\ntype PrimitiveLabelProps = React.ComponentPropsWithoutRef<typeof Primitive.label>;\ninterface LabelProps extends PrimitiveLabelProps {}\n\nconst Label = React.forwardRef<LabelElement, LabelProps>((props, forwardedRef) => {\n  return (\n    <Primitive.label\n      {...props}\n      ref={forwardedRef}\n      onMouseDown={(event) => {\n        // only prevent text selection if clicking inside the label itself\n        const target = event.target as HTMLElement;\n        if (target.closest('button, input, select, textarea')) return;\n\n        props.onMouseDown?.(event);\n        // prevent text selection when double clicking label\n        if (!event.defaultPrevented && event.detail > 1) event.preventDefault();\n      }}\n    />\n  );\n});\n\nLabel.displayName = NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = Label;\n\nexport {\n  Label,\n  //\n  Root,\n};\nexport type { LabelProps };\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Slot } from '@radix-ui/react-slot';\n\nconst NODES = [\n  'a',\n  'button',\n  'div',\n  'form',\n  'h2',\n  'h3',\n  'img',\n  'input',\n  'label',\n  'li',\n  'nav',\n  'ol',\n  'p',\n  'span',\n  'svg',\n  'ul',\n] as const;\n\ntype Primitives = { [E in (typeof NODES)[number]]: PrimitiveForwardRefComponent<E> };\ntype PrimitivePropsWithRef<E extends React.ElementType> = React.ComponentPropsWithRef<E> & {\n  asChild?: boolean;\n};\n\ninterface PrimitiveForwardRefComponent<E extends React.ElementType>\n  extends React.ForwardRefExoticComponent<PrimitivePropsWithRef<E>> {}\n\n/* -------------------------------------------------------------------------------------------------\n * Primitive\n * -----------------------------------------------------------------------------------------------*/\n\nconst Primitive = NODES.reduce((primitive, node) => {\n  const Node = React.forwardRef((props: PrimitivePropsWithRef<typeof node>, forwardedRef: any) => {\n    const { asChild, ...primitiveProps } = props;\n    const Comp: any = asChild ? Slot : node;\n\n    if (typeof window !== 'undefined') {\n      (window as any)[Symbol.for('radix-ui')] = true;\n    }\n\n    return <Comp {...primitiveProps} ref={forwardedRef} />;\n  });\n\n  Node.displayName = `Primitive.${node}`;\n\n  return { ...primitive, [node]: Node };\n}, {} as Primitives);\n\n/* -------------------------------------------------------------------------------------------------\n * Utils\n * -----------------------------------------------------------------------------------------------*/\n\n/**\n * Flush custom event dispatch\n * https://github.com/radix-ui/primitives/pull/1378\n *\n * React batches *all* event handlers since version 18, this introduces certain considerations when using custom event types.\n *\n * Internally, React prioritises events in the following order:\n *  - discrete\n *  - continuous\n *  - default\n *\n * https://github.com/facebook/react/blob/a8a4742f1c54493df00da648a3f9d26e3db9c8b5/packages/react-dom/src/events/ReactDOMEventListener.js#L294-L350\n *\n * `discrete` is an  important distinction as updates within these events are applied immediately.\n * React however, is not able to infer the priority of custom event types due to how they are detected internally.\n * Because of this, it's possible for updates from custom events to be unexpectedly batched when\n * dispatched by another `discrete` event.\n *\n * In order to ensure that updates from custom events are applied predictably, we need to manually flush the batch.\n * This utility should be used when dispatching a custom event from within another `discrete` event, this utility\n * is not nessesary when dispatching known event types, or if dispatching a custom type inside a non-discrete event.\n * For example:\n *\n * dispatching a known click 👎\n * target.dispatchEvent(new Event(‘click’))\n *\n * dispatching a custom type within a non-discrete event 👎\n * onScroll={(event) => event.target.dispatchEvent(new CustomEvent(‘customType’))}\n *\n * dispatching a custom type within a `discrete` event 👍\n * onPointerDown={(event) => dispatchDiscreteCustomEvent(event.target, new CustomEvent(‘customType’))}\n *\n * Note: though React classifies `focus`, `focusin` and `focusout` events as `discrete`, it's  not recommended to use\n * this utility with them. This is because it's possible for those handlers to be called implicitly during render\n * e.g. when focus is within a component as it is unmounted, or when managing focus on mount.\n */\n\nfunction dispatchDiscreteCustomEvent<E extends CustomEvent>(target: E['target'], event: E) {\n  if (target) ReactDOM.flushSync(() => target.dispatchEvent(event));\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = Primitive;\n\nexport {\n  Primitive,\n  //\n  Root,\n  //\n  dispatchDiscreteCustomEvent,\n};\nexport type { PrimitivePropsWithRef };\n","function clamp(value: number, [min, max]: [number, number]): number {\n  return Math.min(max, Math.max(min, value));\n}\n\nexport { clamp };\n","function composeEventHandlers<E>(\n  originalEventHandler?: (event: E) => void,\n  ourEventHandler?: (event: E) => void,\n  { checkForDefaultPrevented = true } = {}\n) {\n  return function handleEvent(event: E) {\n    originalEventHandler?.(event);\n\n    if (checkForDefaultPrevented === false || !((event as unknown) as Event).defaultPrevented) {\n      return ourEventHandler?.(event);\n    }\n  };\n}\n\nexport { composeEventHandlers };\n","import * as React from 'react';\n\nfunction createContext<ContextValueType extends object | null>(\n  rootComponentName: string,\n  defaultContext?: ContextValueType\n) {\n  const Context = React.createContext<ContextValueType | undefined>(defaultContext);\n\n  const Provider: React.FC<ContextValueType & { children: React.ReactNode }> = (props) => {\n    const { children, ...context } = props;\n    // Only re-memoize when prop values change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const value = React.useMemo(() => context, Object.values(context)) as ContextValueType;\n    return <Context.Provider value={value}>{children}</Context.Provider>;\n  };\n\n  Provider.displayName = rootComponentName + 'Provider';\n\n  function useContext(consumerName: string) {\n    const context = React.useContext(Context);\n    if (context) return context;\n    if (defaultContext !== undefined) return defaultContext;\n    // if a defaultContext wasn't specified, it's a required context.\n    throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n  }\n\n  return [Provider, useContext] as const;\n}\n\n/* -------------------------------------------------------------------------------------------------\n * createContextScope\n * -----------------------------------------------------------------------------------------------*/\n\ntype Scope<C = any> = { [scopeName: string]: React.Context<C>[] } | undefined;\ntype ScopeHook = (scope: Scope) => { [__scopeProp: string]: Scope };\ninterface CreateScope {\n  scopeName: string;\n  (): ScopeHook;\n}\n\nfunction createContextScope(scopeName: string, createContextScopeDeps: CreateScope[] = []) {\n  let defaultContexts: any[] = [];\n\n  /* -----------------------------------------------------------------------------------------------\n   * createContext\n   * ---------------------------------------------------------------------------------------------*/\n\n  function createContext<ContextValueType extends object | null>(\n    rootComponentName: string,\n    defaultContext?: ContextValueType\n  ) {\n    const BaseContext = React.createContext<ContextValueType | undefined>(defaultContext);\n    const index = defaultContexts.length;\n    defaultContexts = [...defaultContexts, defaultContext];\n\n    const Provider: React.FC<\n      ContextValueType & { scope: Scope<ContextValueType>; children: React.ReactNode }\n    > = (props) => {\n      const { scope, children, ...context } = props;\n      const Context = scope?.[scopeName]?.[index] || BaseContext;\n      // Only re-memoize when prop values change\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      const value = React.useMemo(() => context, Object.values(context)) as ContextValueType;\n      return <Context.Provider value={value}>{children}</Context.Provider>;\n    };\n\n    Provider.displayName = rootComponentName + 'Provider';\n\n    function useContext(consumerName: string, scope: Scope<ContextValueType | undefined>) {\n      const Context = scope?.[scopeName]?.[index] || BaseContext;\n      const context = React.useContext(Context);\n      if (context) return context;\n      if (defaultContext !== undefined) return defaultContext;\n      // if a defaultContext wasn't specified, it's a required context.\n      throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n    }\n\n    return [Provider, useContext] as const;\n  }\n\n  /* -----------------------------------------------------------------------------------------------\n   * createScope\n   * ---------------------------------------------------------------------------------------------*/\n\n  const createScope: CreateScope = () => {\n    const scopeContexts = defaultContexts.map((defaultContext) => {\n      return React.createContext(defaultContext);\n    });\n    return function useScope(scope: Scope) {\n      const contexts = scope?.[scopeName] || scopeContexts;\n      return React.useMemo(\n        () => ({ [`__scope${scopeName}`]: { ...scope, [scopeName]: contexts } }),\n        [scope, contexts]\n      );\n    };\n  };\n\n  createScope.scopeName = scopeName;\n  return [createContext, composeContextScopes(createScope, ...createContextScopeDeps)] as const;\n}\n\n/* -------------------------------------------------------------------------------------------------\n * composeContextScopes\n * -----------------------------------------------------------------------------------------------*/\n\nfunction composeContextScopes(...scopes: CreateScope[]) {\n  const baseScope = scopes[0];\n  if (scopes.length === 1) return baseScope;\n\n  const createScope: CreateScope = () => {\n    const scopeHooks = scopes.map((createScope) => ({\n      useScope: createScope(),\n      scopeName: createScope.scopeName,\n    }));\n\n    return function useComposedScopes(overrideScopes) {\n      const nextScopes = scopeHooks.reduce((nextScopes, { useScope, scopeName }) => {\n        // We are calling a hook inside a callback which React warns against to avoid inconsistent\n        // renders, however, scoping doesn't have render side effects so we ignore the rule.\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const scopeProps = useScope(overrideScopes);\n        const currentScope = scopeProps[`__scope${scopeName}`];\n        return { ...nextScopes, ...currentScope };\n      }, {});\n\n      return React.useMemo(() => ({ [`__scope${baseScope.scopeName}`]: nextScopes }), [nextScopes]);\n    };\n  };\n\n  createScope.scopeName = baseScope.scopeName;\n  return createScope;\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nexport { createContext, createContextScope };\nexport type { CreateScope, Scope };\n","import * as React from 'react';\n\n/**\n * A custom hook that converts a callback to a ref to avoid triggering re-renders when passed as a\n * prop or avoid re-executing effects when passed as a dependency\n */\nfunction useCallbackRef<T extends (...args: any[]) => any>(callback: T | undefined): T {\n  const callbackRef = React.useRef(callback);\n\n  React.useEffect(() => {\n    callbackRef.current = callback;\n  });\n\n  // https://github.com/facebook/react/issues/19240\n  return React.useMemo(() => ((...args) => callbackRef.current?.(...args)) as T, []);\n}\n\nexport { useCallbackRef };\n","import * as React from 'react';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\n\ntype UseControllableStateParams<T> = {\n  prop?: T | undefined;\n  defaultProp?: T | undefined;\n  onChange?: (state: T) => void;\n};\n\ntype SetStateFn<T> = (prevState?: T) => T;\n\nfunction useControllableState<T>({\n  prop,\n  defaultProp,\n  onChange = () => {},\n}: UseControllableStateParams<T>) {\n  const [uncontrolledProp, setUncontrolledProp] = useUncontrolledState({ defaultProp, onChange });\n  const isControlled = prop !== undefined;\n  const value = isControlled ? prop : uncontrolledProp;\n  const handleChange = useCallbackRef(onChange);\n\n  const setValue: React.Dispatch<React.SetStateAction<T | undefined>> = React.useCallback(\n    (nextValue) => {\n      if (isControlled) {\n        const setter = nextValue as SetStateFn<T>;\n        const value = typeof nextValue === 'function' ? setter(prop) : nextValue;\n        if (value !== prop) handleChange(value as T);\n      } else {\n        setUncontrolledProp(nextValue);\n      }\n    },\n    [isControlled, prop, setUncontrolledProp, handleChange]\n  );\n\n  return [value, setValue] as const;\n}\n\nfunction useUncontrolledState<T>({\n  defaultProp,\n  onChange,\n}: Omit<UseControllableStateParams<T>, 'prop'>) {\n  const uncontrolledState = React.useState<T | undefined>(defaultProp);\n  const [value] = uncontrolledState;\n  const prevValueRef = React.useRef(value);\n  const handleChange = useCallbackRef(onChange);\n\n  React.useEffect(() => {\n    if (prevValueRef.current !== value) {\n      handleChange(value as T);\n      prevValueRef.current = value;\n    }\n  }, [value, prevValueRef, handleChange]);\n\n  return uncontrolledState;\n}\n\nexport { useControllableState };\n","import * as React from 'react';\n\ntype Direction = 'ltr' | 'rtl';\nconst DirectionContext = React.createContext<Direction | undefined>(undefined);\n\n/* -------------------------------------------------------------------------------------------------\n * Direction\n * -----------------------------------------------------------------------------------------------*/\n\ninterface DirectionProviderProps {\n  children?: React.ReactNode;\n  dir: Direction;\n}\nconst DirectionProvider: React.FC<DirectionProviderProps> = (props) => {\n  const { dir, children } = props;\n  return <DirectionContext.Provider value={dir}>{children}</DirectionContext.Provider>;\n};\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction useDirection(localDir?: Direction) {\n  const globalDir = React.useContext(DirectionContext);\n  return localDir || globalDir || 'ltr';\n}\n\nconst Provider = DirectionProvider;\n\nexport {\n  useDirection,\n  //\n  Provider,\n  //\n  DirectionProvider,\n};\n","import * as React from 'react';\n\n/**\n * On the server, React emits a warning when calling `useLayoutEffect`.\n * This is because neither `useLayoutEffect` nor `useEffect` run on the server.\n * We use this safe version which suppresses the warning by replacing it with a noop on the server.\n *\n * See: https://reactjs.org/docs/hooks-reference.html#uselayouteffect\n */\nconst useLayoutEffect = Boolean(globalThis?.document) ? React.useLayoutEffect : () => {};\n\nexport { useLayoutEffect };\n","import * as React from 'react';\n\nfunction createContext<ContextValueType extends object | null>(\n  rootComponentName: string,\n  defaultContext?: ContextValueType\n) {\n  const Context = React.createContext<ContextValueType | undefined>(defaultContext);\n\n  function Provider(props: ContextValueType & { children: React.ReactNode }) {\n    const { children, ...context } = props;\n    // Only re-memoize when prop values change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const value = React.useMemo(() => context, Object.values(context)) as ContextValueType;\n    return <Context.Provider value={value}>{children}</Context.Provider>;\n  }\n\n  function useContext(consumerName: string) {\n    const context = React.useContext(Context);\n    if (context) return context;\n    if (defaultContext !== undefined) return defaultContext;\n    // if a defaultContext wasn't specified, it's a required context.\n    throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n  }\n\n  Provider.displayName = rootComponentName + 'Provider';\n  return [Provider, useContext] as const;\n}\n\n/* -------------------------------------------------------------------------------------------------\n * createContextScope\n * -----------------------------------------------------------------------------------------------*/\n\ntype Scope<C = any> = { [scopeName: string]: React.Context<C>[] } | undefined;\ntype ScopeHook = (scope: Scope) => { [__scopeProp: string]: Scope };\ninterface CreateScope {\n  scopeName: string;\n  (): ScopeHook;\n}\n\nfunction createContextScope(scopeName: string, createContextScopeDeps: CreateScope[] = []) {\n  let defaultContexts: any[] = [];\n\n  /* -----------------------------------------------------------------------------------------------\n   * createContext\n   * ---------------------------------------------------------------------------------------------*/\n\n  function createContext<ContextValueType extends object | null>(\n    rootComponentName: string,\n    defaultContext?: ContextValueType\n  ) {\n    const BaseContext = React.createContext<ContextValueType | undefined>(defaultContext);\n    const index = defaultContexts.length;\n    defaultContexts = [...defaultContexts, defaultContext];\n\n    function Provider(\n      props: ContextValueType & { scope: Scope<ContextValueType>; children: React.ReactNode }\n    ) {\n      const { scope, children, ...context } = props;\n      const Context = scope?.[scopeName][index] || BaseContext;\n      // Only re-memoize when prop values change\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      const value = React.useMemo(() => context, Object.values(context)) as ContextValueType;\n      return <Context.Provider value={value}>{children}</Context.Provider>;\n    }\n\n    function useContext(consumerName: string, scope: Scope<ContextValueType | undefined>) {\n      const Context = scope?.[scopeName][index] || BaseContext;\n      const context = React.useContext(Context);\n      if (context) return context;\n      if (defaultContext !== undefined) return defaultContext;\n      // if a defaultContext wasn't specified, it's a required context.\n      throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n    }\n\n    Provider.displayName = rootComponentName + 'Provider';\n    return [Provider, useContext] as const;\n  }\n\n  /* -----------------------------------------------------------------------------------------------\n   * createScope\n   * ---------------------------------------------------------------------------------------------*/\n\n  const createScope: CreateScope = () => {\n    const scopeContexts = defaultContexts.map((defaultContext) => {\n      return React.createContext(defaultContext);\n    });\n    return function useScope(scope: Scope) {\n      const contexts = scope?.[scopeName] || scopeContexts;\n      return React.useMemo(\n        () => ({ [`__scope${scopeName}`]: { ...scope, [scopeName]: contexts } }),\n        [scope, contexts]\n      );\n    };\n  };\n\n  createScope.scopeName = scopeName;\n  return [createContext, composeContextScopes(createScope, ...createContextScopeDeps)] as const;\n}\n\n/* -------------------------------------------------------------------------------------------------\n * composeContextScopes\n * -----------------------------------------------------------------------------------------------*/\n\nfunction composeContextScopes(...scopes: CreateScope[]) {\n  const baseScope = scopes[0];\n  if (scopes.length === 1) return baseScope;\n\n  const createScope: CreateScope = () => {\n    const scopeHooks = scopes.map((createScope) => ({\n      useScope: createScope(),\n      scopeName: createScope.scopeName,\n    }));\n\n    return function useComposedScopes(overrideScopes) {\n      const nextScopes = scopeHooks.reduce((nextScopes, { useScope, scopeName }) => {\n        // We are calling a hook inside a callback which React warns against to avoid inconsistent\n        // renders, however, scoping doesn't have render side effects so we ignore the rule.\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const scopeProps = useScope(overrideScopes);\n        const currentScope = scopeProps[`__scope${scopeName}`];\n        return { ...nextScopes, ...currentScope };\n      }, {});\n\n      return React.useMemo(() => ({ [`__scope${baseScope.scopeName}`]: nextScopes }), [nextScopes]);\n    };\n  };\n\n  createScope.scopeName = baseScope.scopeName;\n  return createScope;\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nexport { createContext, createContextScope };\nexport type { CreateScope, Scope };\n","import * as React from 'react';\nimport { clamp } from '@radix-ui/number';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { useDirection } from '@radix-ui/react-direction';\nimport { usePrevious } from '@radix-ui/react-use-previous';\nimport { useSize } from '@radix-ui/react-use-size';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { createCollection } from '@radix-ui/react-collection';\n\nimport type { Scope } from '@radix-ui/react-context';\n\ntype Direction = 'ltr' | 'rtl';\n\nconst PAGE_KEYS = ['PageUp', 'PageDown'];\nconst ARROW_KEYS = ['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'];\n\ntype SlideDirection = 'from-left' | 'from-right' | 'from-bottom' | 'from-top';\nconst BACK_KEYS: Record<SlideDirection, string[]> = {\n  'from-left': ['Home', 'PageDown', 'ArrowDown', 'ArrowLeft'],\n  'from-right': ['Home', 'PageDown', 'ArrowDown', 'ArrowRight'],\n  'from-bottom': ['Home', 'PageDown', 'ArrowDown', 'ArrowLeft'],\n  'from-top': ['Home', 'PageDown', 'ArrowUp', 'ArrowLeft'],\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Slider\n * -----------------------------------------------------------------------------------------------*/\n\nconst SLIDER_NAME = 'Slider';\n\nconst [Collection, useCollection, createCollectionScope] =\n  createCollection<SliderThumbElement>(SLIDER_NAME);\n\ntype ScopedProps<P> = P & { __scopeSlider?: Scope };\nconst [createSliderContext, createSliderScope] = createContextScope(SLIDER_NAME, [\n  createCollectionScope,\n]);\n\ntype SliderContextValue = {\n  name: string | undefined;\n  disabled: boolean | undefined;\n  min: number;\n  max: number;\n  values: number[];\n  valueIndexToChangeRef: React.MutableRefObject<number>;\n  thumbs: Set<SliderThumbElement>;\n  orientation: SliderProps['orientation'];\n  form: string | undefined;\n};\n\nconst [SliderProvider, useSliderContext] = createSliderContext<SliderContextValue>(SLIDER_NAME);\n\ntype SliderElement = SliderHorizontalElement | SliderVerticalElement;\ninterface SliderProps\n  extends Omit<\n    SliderHorizontalProps | SliderVerticalProps,\n    keyof SliderOrientationPrivateProps | 'defaultValue'\n  > {\n  name?: string;\n  disabled?: boolean;\n  orientation?: React.AriaAttributes['aria-orientation'];\n  dir?: Direction;\n  min?: number;\n  max?: number;\n  step?: number;\n  minStepsBetweenThumbs?: number;\n  value?: number[];\n  defaultValue?: number[];\n  onValueChange?(value: number[]): void;\n  onValueCommit?(value: number[]): void;\n  inverted?: boolean;\n  form?: string;\n}\n\nconst Slider = React.forwardRef<SliderElement, SliderProps>(\n  (props: ScopedProps<SliderProps>, forwardedRef) => {\n    const {\n      name,\n      min = 0,\n      max = 100,\n      step = 1,\n      orientation = 'horizontal',\n      disabled = false,\n      minStepsBetweenThumbs = 0,\n      defaultValue = [min],\n      value,\n      onValueChange = () => {},\n      onValueCommit = () => {},\n      inverted = false,\n      form,\n      ...sliderProps\n    } = props;\n    const thumbRefs = React.useRef<SliderContextValue['thumbs']>(new Set());\n    const valueIndexToChangeRef = React.useRef<number>(0);\n    const isHorizontal = orientation === 'horizontal';\n    const SliderOrientation = isHorizontal ? SliderHorizontal : SliderVertical;\n\n    const [values = [], setValues] = useControllableState({\n      prop: value,\n      defaultProp: defaultValue,\n      onChange: (value) => {\n        const thumbs = [...thumbRefs.current];\n        thumbs[valueIndexToChangeRef.current]?.focus();\n        onValueChange(value);\n      },\n    });\n    const valuesBeforeSlideStartRef = React.useRef(values);\n\n    function handleSlideStart(value: number) {\n      const closestIndex = getClosestValueIndex(values, value);\n      updateValues(value, closestIndex);\n    }\n\n    function handleSlideMove(value: number) {\n      updateValues(value, valueIndexToChangeRef.current);\n    }\n\n    function handleSlideEnd() {\n      const prevValue = valuesBeforeSlideStartRef.current[valueIndexToChangeRef.current];\n      const nextValue = values[valueIndexToChangeRef.current];\n      const hasChanged = nextValue !== prevValue;\n      if (hasChanged) onValueCommit(values);\n    }\n\n    function updateValues(value: number, atIndex: number, { commit } = { commit: false }) {\n      const decimalCount = getDecimalCount(step);\n      const snapToStep = roundValue(Math.round((value - min) / step) * step + min, decimalCount);\n      const nextValue = clamp(snapToStep, [min, max]);\n\n      setValues((prevValues = []) => {\n        const nextValues = getNextSortedValues(prevValues, nextValue, atIndex);\n        if (hasMinStepsBetweenValues(nextValues, minStepsBetweenThumbs * step)) {\n          valueIndexToChangeRef.current = nextValues.indexOf(nextValue);\n          const hasChanged = String(nextValues) !== String(prevValues);\n          if (hasChanged && commit) onValueCommit(nextValues);\n          return hasChanged ? nextValues : prevValues;\n        } else {\n          return prevValues;\n        }\n      });\n    }\n\n    return (\n      <SliderProvider\n        scope={props.__scopeSlider}\n        name={name}\n        disabled={disabled}\n        min={min}\n        max={max}\n        valueIndexToChangeRef={valueIndexToChangeRef}\n        thumbs={thumbRefs.current}\n        values={values}\n        orientation={orientation}\n        form={form}\n      >\n        <Collection.Provider scope={props.__scopeSlider}>\n          <Collection.Slot scope={props.__scopeSlider}>\n            <SliderOrientation\n              aria-disabled={disabled}\n              data-disabled={disabled ? '' : undefined}\n              {...sliderProps}\n              ref={forwardedRef}\n              onPointerDown={composeEventHandlers(sliderProps.onPointerDown, () => {\n                if (!disabled) valuesBeforeSlideStartRef.current = values;\n              })}\n              min={min}\n              max={max}\n              inverted={inverted}\n              onSlideStart={disabled ? undefined : handleSlideStart}\n              onSlideMove={disabled ? undefined : handleSlideMove}\n              onSlideEnd={disabled ? undefined : handleSlideEnd}\n              onHomeKeyDown={() => !disabled && updateValues(min, 0, { commit: true })}\n              onEndKeyDown={() =>\n                !disabled && updateValues(max, values.length - 1, { commit: true })\n              }\n              onStepKeyDown={({ event, direction: stepDirection }) => {\n                if (!disabled) {\n                  const isPageKey = PAGE_KEYS.includes(event.key);\n                  const isSkipKey = isPageKey || (event.shiftKey && ARROW_KEYS.includes(event.key));\n                  const multiplier = isSkipKey ? 10 : 1;\n                  const atIndex = valueIndexToChangeRef.current;\n                  const value = values[atIndex];\n                  const stepInDirection = step * multiplier * stepDirection;\n                  updateValues(value + stepInDirection, atIndex, { commit: true });\n                }\n              }}\n            />\n          </Collection.Slot>\n        </Collection.Provider>\n      </SliderProvider>\n    );\n  }\n);\n\nSlider.displayName = SLIDER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SliderHorizontal\n * -----------------------------------------------------------------------------------------------*/\n\ntype Side = 'top' | 'right' | 'bottom' | 'left';\n\nconst [SliderOrientationProvider, useSliderOrientationContext] = createSliderContext<{\n  startEdge: Side;\n  endEdge: Side;\n  size: keyof NonNullable<ReturnType<typeof useSize>>;\n  direction: number;\n}>(SLIDER_NAME, {\n  startEdge: 'left',\n  endEdge: 'right',\n  size: 'width',\n  direction: 1,\n});\n\ntype SliderOrientationPrivateProps = {\n  min: number;\n  max: number;\n  inverted: boolean;\n  onSlideStart?(value: number): void;\n  onSlideMove?(value: number): void;\n  onSlideEnd?(): void;\n  onHomeKeyDown(event: React.KeyboardEvent): void;\n  onEndKeyDown(event: React.KeyboardEvent): void;\n  onStepKeyDown(step: { event: React.KeyboardEvent; direction: number }): void;\n};\ninterface SliderOrientationProps\n  extends Omit<SliderImplProps, keyof SliderImplPrivateProps>,\n    SliderOrientationPrivateProps {}\n\ntype SliderHorizontalElement = SliderImplElement;\ninterface SliderHorizontalProps extends SliderOrientationProps {\n  dir?: Direction;\n}\n\nconst SliderHorizontal = React.forwardRef<SliderHorizontalElement, SliderHorizontalProps>(\n  (props: ScopedProps<SliderHorizontalProps>, forwardedRef) => {\n    const {\n      min,\n      max,\n      dir,\n      inverted,\n      onSlideStart,\n      onSlideMove,\n      onSlideEnd,\n      onStepKeyDown,\n      ...sliderProps\n    } = props;\n    const [slider, setSlider] = React.useState<SliderImplElement | null>(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setSlider(node));\n    const rectRef = React.useRef<DOMRect>();\n    const direction = useDirection(dir);\n    const isDirectionLTR = direction === 'ltr';\n    const isSlidingFromLeft = (isDirectionLTR && !inverted) || (!isDirectionLTR && inverted);\n\n    function getValueFromPointer(pointerPosition: number) {\n      const rect = rectRef.current || slider!.getBoundingClientRect();\n      const input: [number, number] = [0, rect.width];\n      const output: [number, number] = isSlidingFromLeft ? [min, max] : [max, min];\n      const value = linearScale(input, output);\n\n      rectRef.current = rect;\n      return value(pointerPosition - rect.left);\n    }\n\n    return (\n      <SliderOrientationProvider\n        scope={props.__scopeSlider}\n        startEdge={isSlidingFromLeft ? 'left' : 'right'}\n        endEdge={isSlidingFromLeft ? 'right' : 'left'}\n        direction={isSlidingFromLeft ? 1 : -1}\n        size=\"width\"\n      >\n        <SliderImpl\n          dir={direction}\n          data-orientation=\"horizontal\"\n          {...sliderProps}\n          ref={composedRefs}\n          style={{\n            ...sliderProps.style,\n            ['--radix-slider-thumb-transform' as any]: 'translateX(-50%)',\n          }}\n          onSlideStart={(event) => {\n            const value = getValueFromPointer(event.clientX);\n            onSlideStart?.(value);\n          }}\n          onSlideMove={(event) => {\n            const value = getValueFromPointer(event.clientX);\n            onSlideMove?.(value);\n          }}\n          onSlideEnd={() => {\n            rectRef.current = undefined;\n            onSlideEnd?.();\n          }}\n          onStepKeyDown={(event) => {\n            const slideDirection = isSlidingFromLeft ? 'from-left' : 'from-right';\n            const isBackKey = BACK_KEYS[slideDirection].includes(event.key);\n            onStepKeyDown?.({ event, direction: isBackKey ? -1 : 1 });\n          }}\n        />\n      </SliderOrientationProvider>\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * SliderVertical\n * -----------------------------------------------------------------------------------------------*/\n\ntype SliderVerticalElement = SliderImplElement;\ninterface SliderVerticalProps extends SliderOrientationProps {}\n\nconst SliderVertical = React.forwardRef<SliderVerticalElement, SliderVerticalProps>(\n  (props: ScopedProps<SliderVerticalProps>, forwardedRef) => {\n    const {\n      min,\n      max,\n      inverted,\n      onSlideStart,\n      onSlideMove,\n      onSlideEnd,\n      onStepKeyDown,\n      ...sliderProps\n    } = props;\n    const sliderRef = React.useRef<SliderImplElement>(null);\n    const ref = useComposedRefs(forwardedRef, sliderRef);\n    const rectRef = React.useRef<DOMRect>();\n    const isSlidingFromBottom = !inverted;\n\n    function getValueFromPointer(pointerPosition: number) {\n      const rect = rectRef.current || sliderRef.current!.getBoundingClientRect();\n      const input: [number, number] = [0, rect.height];\n      const output: [number, number] = isSlidingFromBottom ? [max, min] : [min, max];\n      const value = linearScale(input, output);\n\n      rectRef.current = rect;\n      return value(pointerPosition - rect.top);\n    }\n\n    return (\n      <SliderOrientationProvider\n        scope={props.__scopeSlider}\n        startEdge={isSlidingFromBottom ? 'bottom' : 'top'}\n        endEdge={isSlidingFromBottom ? 'top' : 'bottom'}\n        size=\"height\"\n        direction={isSlidingFromBottom ? 1 : -1}\n      >\n        <SliderImpl\n          data-orientation=\"vertical\"\n          {...sliderProps}\n          ref={ref}\n          style={{\n            ...sliderProps.style,\n            ['--radix-slider-thumb-transform' as any]: 'translateY(50%)',\n          }}\n          onSlideStart={(event) => {\n            const value = getValueFromPointer(event.clientY);\n            onSlideStart?.(value);\n          }}\n          onSlideMove={(event) => {\n            const value = getValueFromPointer(event.clientY);\n            onSlideMove?.(value);\n          }}\n          onSlideEnd={() => {\n            rectRef.current = undefined;\n            onSlideEnd?.();\n          }}\n          onStepKeyDown={(event) => {\n            const slideDirection = isSlidingFromBottom ? 'from-bottom' : 'from-top';\n            const isBackKey = BACK_KEYS[slideDirection].includes(event.key);\n            onStepKeyDown?.({ event, direction: isBackKey ? -1 : 1 });\n          }}\n        />\n      </SliderOrientationProvider>\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * SliderImpl\n * -----------------------------------------------------------------------------------------------*/\n\ntype SliderImplElement = React.ElementRef<typeof Primitive.span>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ntype SliderImplPrivateProps = {\n  onSlideStart(event: React.PointerEvent): void;\n  onSlideMove(event: React.PointerEvent): void;\n  onSlideEnd(event: React.PointerEvent): void;\n  onHomeKeyDown(event: React.KeyboardEvent): void;\n  onEndKeyDown(event: React.KeyboardEvent): void;\n  onStepKeyDown(event: React.KeyboardEvent): void;\n};\ninterface SliderImplProps extends PrimitiveDivProps, SliderImplPrivateProps {}\n\nconst SliderImpl = React.forwardRef<SliderImplElement, SliderImplProps>(\n  (props: ScopedProps<SliderImplProps>, forwardedRef) => {\n    const {\n      __scopeSlider,\n      onSlideStart,\n      onSlideMove,\n      onSlideEnd,\n      onHomeKeyDown,\n      onEndKeyDown,\n      onStepKeyDown,\n      ...sliderProps\n    } = props;\n    const context = useSliderContext(SLIDER_NAME, __scopeSlider);\n\n    return (\n      <Primitive.span\n        {...sliderProps}\n        ref={forwardedRef}\n        onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n          if (event.key === 'Home') {\n            onHomeKeyDown(event);\n            // Prevent scrolling to page start\n            event.preventDefault();\n          } else if (event.key === 'End') {\n            onEndKeyDown(event);\n            // Prevent scrolling to page end\n            event.preventDefault();\n          } else if (PAGE_KEYS.concat(ARROW_KEYS).includes(event.key)) {\n            onStepKeyDown(event);\n            // Prevent scrolling for directional key presses\n            event.preventDefault();\n          }\n        })}\n        onPointerDown={composeEventHandlers(props.onPointerDown, (event) => {\n          const target = event.target as HTMLElement;\n          target.setPointerCapture(event.pointerId);\n          // Prevent browser focus behaviour because we focus a thumb manually when values change.\n          event.preventDefault();\n          // Touch devices have a delay before focusing so won't focus if touch immediately moves\n          // away from target (sliding). We want thumb to focus regardless.\n          if (context.thumbs.has(target)) {\n            target.focus();\n          } else {\n            onSlideStart(event);\n          }\n        })}\n        onPointerMove={composeEventHandlers(props.onPointerMove, (event) => {\n          const target = event.target as HTMLElement;\n          if (target.hasPointerCapture(event.pointerId)) onSlideMove(event);\n        })}\n        onPointerUp={composeEventHandlers(props.onPointerUp, (event) => {\n          const target = event.target as HTMLElement;\n          if (target.hasPointerCapture(event.pointerId)) {\n            target.releasePointerCapture(event.pointerId);\n            onSlideEnd(event);\n          }\n        })}\n      />\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * SliderTrack\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRACK_NAME = 'SliderTrack';\n\ntype SliderTrackElement = React.ElementRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = React.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface SliderTrackProps extends PrimitiveSpanProps {}\n\nconst SliderTrack = React.forwardRef<SliderTrackElement, SliderTrackProps>(\n  (props: ScopedProps<SliderTrackProps>, forwardedRef) => {\n    const { __scopeSlider, ...trackProps } = props;\n    const context = useSliderContext(TRACK_NAME, __scopeSlider);\n    return (\n      <Primitive.span\n        data-disabled={context.disabled ? '' : undefined}\n        data-orientation={context.orientation}\n        {...trackProps}\n        ref={forwardedRef}\n      />\n    );\n  }\n);\n\nSliderTrack.displayName = TRACK_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SliderRange\n * -----------------------------------------------------------------------------------------------*/\n\nconst RANGE_NAME = 'SliderRange';\n\ntype SliderRangeElement = React.ElementRef<typeof Primitive.span>;\ninterface SliderRangeProps extends PrimitiveSpanProps {}\n\nconst SliderRange = React.forwardRef<SliderRangeElement, SliderRangeProps>(\n  (props: ScopedProps<SliderRangeProps>, forwardedRef) => {\n    const { __scopeSlider, ...rangeProps } = props;\n    const context = useSliderContext(RANGE_NAME, __scopeSlider);\n    const orientation = useSliderOrientationContext(RANGE_NAME, __scopeSlider);\n    const ref = React.useRef<HTMLSpanElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n    const valuesCount = context.values.length;\n    const percentages = context.values.map((value) =>\n      convertValueToPercentage(value, context.min, context.max)\n    );\n    const offsetStart = valuesCount > 1 ? Math.min(...percentages) : 0;\n    const offsetEnd = 100 - Math.max(...percentages);\n\n    return (\n      <Primitive.span\n        data-orientation={context.orientation}\n        data-disabled={context.disabled ? '' : undefined}\n        {...rangeProps}\n        ref={composedRefs}\n        style={{\n          ...props.style,\n          [orientation.startEdge]: offsetStart + '%',\n          [orientation.endEdge]: offsetEnd + '%',\n        }}\n      />\n    );\n  }\n);\n\nSliderRange.displayName = RANGE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SliderThumb\n * -----------------------------------------------------------------------------------------------*/\n\nconst THUMB_NAME = 'SliderThumb';\n\ntype SliderThumbElement = SliderThumbImplElement;\ninterface SliderThumbProps extends Omit<SliderThumbImplProps, 'index'> {}\n\nconst SliderThumb = React.forwardRef<SliderThumbElement, SliderThumbProps>(\n  (props: ScopedProps<SliderThumbProps>, forwardedRef) => {\n    const getItems = useCollection(props.__scopeSlider);\n    const [thumb, setThumb] = React.useState<SliderThumbImplElement | null>(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setThumb(node));\n    const index = React.useMemo(\n      () => (thumb ? getItems().findIndex((item) => item.ref.current === thumb) : -1),\n      [getItems, thumb]\n    );\n    return <SliderThumbImpl {...props} ref={composedRefs} index={index} />;\n  }\n);\n\ntype SliderThumbImplElement = React.ElementRef<typeof Primitive.span>;\ninterface SliderThumbImplProps extends PrimitiveSpanProps {\n  index: number;\n  name?: string;\n}\n\nconst SliderThumbImpl = React.forwardRef<SliderThumbImplElement, SliderThumbImplProps>(\n  (props: ScopedProps<SliderThumbImplProps>, forwardedRef) => {\n    const { __scopeSlider, index, name, ...thumbProps } = props;\n    const context = useSliderContext(THUMB_NAME, __scopeSlider);\n    const orientation = useSliderOrientationContext(THUMB_NAME, __scopeSlider);\n    const [thumb, setThumb] = React.useState<HTMLSpanElement | null>(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setThumb(node));\n    // We set this to true by default so that events bubble to forms without JS (SSR)\n    const isFormControl = thumb ? context.form || !!thumb.closest('form') : true;\n    const size = useSize(thumb);\n    // We cast because index could be `-1` which would return undefined\n    const value = context.values[index] as number | undefined;\n    const percent =\n      value === undefined ? 0 : convertValueToPercentage(value, context.min, context.max);\n    const label = getLabel(index, context.values.length);\n    const orientationSize = size?.[orientation.size];\n    const thumbInBoundsOffset = orientationSize\n      ? getThumbInBoundsOffset(orientationSize, percent, orientation.direction)\n      : 0;\n\n    React.useEffect(() => {\n      if (thumb) {\n        context.thumbs.add(thumb);\n        return () => {\n          context.thumbs.delete(thumb);\n        };\n      }\n    }, [thumb, context.thumbs]);\n\n    return (\n      <span\n        style={{\n          transform: 'var(--radix-slider-thumb-transform)',\n          position: 'absolute',\n          [orientation.startEdge]: `calc(${percent}% + ${thumbInBoundsOffset}px)`,\n        }}\n      >\n        <Collection.ItemSlot scope={props.__scopeSlider}>\n          <Primitive.span\n            role=\"slider\"\n            aria-label={props['aria-label'] || label}\n            aria-valuemin={context.min}\n            aria-valuenow={value}\n            aria-valuemax={context.max}\n            aria-orientation={context.orientation}\n            data-orientation={context.orientation}\n            data-disabled={context.disabled ? '' : undefined}\n            tabIndex={context.disabled ? undefined : 0}\n            {...thumbProps}\n            ref={composedRefs}\n            /**\n             * There will be no value on initial render while we work out the index so we hide thumbs\n             * without a value, otherwise SSR will render them in the wrong position before they\n             * snap into the correct position during hydration which would be visually jarring for\n             * slower connections.\n             */\n            style={value === undefined ? { display: 'none' } : props.style}\n            onFocus={composeEventHandlers(props.onFocus, () => {\n              context.valueIndexToChangeRef.current = index;\n            })}\n          />\n        </Collection.ItemSlot>\n\n        {isFormControl && (\n          <BubbleInput\n            key={index}\n            name={\n              name ??\n              (context.name ? context.name + (context.values.length > 1 ? '[]' : '') : undefined)\n            }\n            form={context.form}\n            value={value}\n          />\n        )}\n      </span>\n    );\n  }\n);\n\nSliderThumb.displayName = THUMB_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst BubbleInput = (props: React.ComponentPropsWithoutRef<'input'>) => {\n  const { value, ...inputProps } = props;\n  const ref = React.useRef<HTMLInputElement>(null);\n  const prevValue = usePrevious(value);\n\n  // Bubble value change to parents (e.g form change event)\n  React.useEffect(() => {\n    const input = ref.current!;\n    const inputProto = window.HTMLInputElement.prototype;\n    const descriptor = Object.getOwnPropertyDescriptor(inputProto, 'value') as PropertyDescriptor;\n    const setValue = descriptor.set;\n    if (prevValue !== value && setValue) {\n      const event = new Event('input', { bubbles: true });\n      setValue.call(input, value);\n      input.dispatchEvent(event);\n    }\n  }, [prevValue, value]);\n\n  /**\n   * We purposefully do not use `type=\"hidden\"` here otherwise forms that\n   * wrap it will not be able to access its value via the FormData API.\n   *\n   * We purposefully do not add the `value` attribute here to allow the value\n   * to be set programmatically and bubble to any parent form `onChange` event.\n   * Adding the `value` will cause React to consider the programmatic\n   * dispatch a duplicate and it will get swallowed.\n   */\n  return <input style={{ display: 'none' }} {...inputProps} ref={ref} defaultValue={value} />;\n};\n\nfunction getNextSortedValues(prevValues: number[] = [], nextValue: number, atIndex: number) {\n  const nextValues = [...prevValues];\n  nextValues[atIndex] = nextValue;\n  return nextValues.sort((a, b) => a - b);\n}\n\nfunction convertValueToPercentage(value: number, min: number, max: number) {\n  const maxSteps = max - min;\n  const percentPerStep = 100 / maxSteps;\n  const percentage = percentPerStep * (value - min);\n  return clamp(percentage, [0, 100]);\n}\n\n/**\n * Returns a label for each thumb when there are two or more thumbs\n */\nfunction getLabel(index: number, totalValues: number) {\n  if (totalValues > 2) {\n    return `Value ${index + 1} of ${totalValues}`;\n  } else if (totalValues === 2) {\n    return ['Minimum', 'Maximum'][index];\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Given a `values` array and a `nextValue`, determine which value in\n * the array is closest to `nextValue` and return its index.\n *\n * @example\n * // returns 1\n * getClosestValueIndex([10, 30], 25);\n */\nfunction getClosestValueIndex(values: number[], nextValue: number) {\n  if (values.length === 1) return 0;\n  const distances = values.map((value) => Math.abs(value - nextValue));\n  const closestDistance = Math.min(...distances);\n  return distances.indexOf(closestDistance);\n}\n\n/**\n * Offsets the thumb centre point while sliding to ensure it remains\n * within the bounds of the slider when reaching the edges\n */\nfunction getThumbInBoundsOffset(width: number, left: number, direction: number) {\n  const halfWidth = width / 2;\n  const halfPercent = 50;\n  const offset = linearScale([0, halfPercent], [0, halfWidth]);\n  return (halfWidth - offset(left) * direction) * direction;\n}\n\n/**\n * Gets an array of steps between each value.\n *\n * @example\n * // returns [1, 9]\n * getStepsBetweenValues([10, 11, 20]);\n */\nfunction getStepsBetweenValues(values: number[]) {\n  return values.slice(0, -1).map((value, index) => values[index + 1] - value);\n}\n\n/**\n * Verifies the minimum steps between all values is greater than or equal\n * to the expected minimum steps.\n *\n * @example\n * // returns false\n * hasMinStepsBetweenValues([1,2,3], 2);\n *\n * @example\n * // returns true\n * hasMinStepsBetweenValues([1,2,3], 1);\n */\nfunction hasMinStepsBetweenValues(values: number[], minStepsBetweenValues: number) {\n  if (minStepsBetweenValues > 0) {\n    const stepsBetweenValues = getStepsBetweenValues(values);\n    const actualMinStepsBetweenValues = Math.min(...stepsBetweenValues);\n    return actualMinStepsBetweenValues >= minStepsBetweenValues;\n  }\n  return true;\n}\n\n// https://github.com/tmcw-up-for-adoption/simple-linear-scale/blob/master/index.js\nfunction linearScale(input: readonly [number, number], output: readonly [number, number]) {\n  return (value: number) => {\n    if (input[0] === input[1] || output[0] === output[1]) return output[0];\n    const ratio = (output[1] - output[0]) / (input[1] - input[0]);\n    return output[0] + ratio * (value - input[0]);\n  };\n}\n\nfunction getDecimalCount(value: number) {\n  return (String(value).split('.')[1] || '').length;\n}\n\nfunction roundValue(value: number, decimalCount: number) {\n  const rounder = Math.pow(10, decimalCount);\n  return Math.round(value * rounder) / rounder;\n}\n\nconst Root = Slider;\nconst Track = SliderTrack;\nconst Range = SliderRange;\nconst Thumb = SliderThumb;\n\nexport {\n  createSliderScope,\n  //\n  Slider,\n  SliderTrack,\n  SliderRange,\n  SliderThumb,\n  //\n  Root,\n  Track,\n  Range,\n  Thumb,\n};\nexport type { SliderProps, SliderTrackProps, SliderRangeProps, SliderThumbProps };\n","import React from 'react';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { Slot } from '@radix-ui/react-slot';\n\ntype SlotProps = React.ComponentPropsWithoutRef<typeof Slot>;\ntype CollectionElement = HTMLElement;\ninterface CollectionProps extends SlotProps {\n  scope: any;\n}\n\n// We have resorted to returning slots directly rather than exposing primitives that can then\n// be slotted like `<CollectionItem as={Slot}>…</CollectionItem>`.\n// This is because we encountered issues with generic types that cannot be statically analysed\n// due to creating them dynamically via createCollection.\n\nfunction createCollection<ItemElement extends HTMLElement, ItemData = {}>(name: string) {\n  /* -----------------------------------------------------------------------------------------------\n   * CollectionProvider\n   * ---------------------------------------------------------------------------------------------*/\n\n  const PROVIDER_NAME = name + 'CollectionProvider';\n  const [createCollectionContext, createCollectionScope] = createContextScope(PROVIDER_NAME);\n\n  type ContextValue = {\n    collectionRef: React.RefObject<CollectionElement>;\n    itemMap: Map<React.RefObject<ItemElement>, { ref: React.RefObject<ItemElement> } & ItemData>;\n  };\n\n  const [CollectionProviderImpl, useCollectionContext] = createCollectionContext<ContextValue>(\n    PROVIDER_NAME,\n    { collectionRef: { current: null }, itemMap: new Map() }\n  );\n\n  const CollectionProvider: React.FC<{ children?: React.ReactNode; scope: any }> = (props) => {\n    const { scope, children } = props;\n    const ref = React.useRef<CollectionElement>(null);\n    const itemMap = React.useRef<ContextValue['itemMap']>(new Map()).current;\n    return (\n      <CollectionProviderImpl scope={scope} itemMap={itemMap} collectionRef={ref}>\n        {children}\n      </CollectionProviderImpl>\n    );\n  };\n\n  CollectionProvider.displayName = PROVIDER_NAME;\n\n  /* -----------------------------------------------------------------------------------------------\n   * CollectionSlot\n   * ---------------------------------------------------------------------------------------------*/\n\n  const COLLECTION_SLOT_NAME = name + 'CollectionSlot';\n\n  const CollectionSlot = React.forwardRef<CollectionElement, CollectionProps>(\n    (props, forwardedRef) => {\n      const { scope, children } = props;\n      const context = useCollectionContext(COLLECTION_SLOT_NAME, scope);\n      const composedRefs = useComposedRefs(forwardedRef, context.collectionRef);\n      return <Slot ref={composedRefs}>{children}</Slot>;\n    }\n  );\n\n  CollectionSlot.displayName = COLLECTION_SLOT_NAME;\n\n  /* -----------------------------------------------------------------------------------------------\n   * CollectionItem\n   * ---------------------------------------------------------------------------------------------*/\n\n  const ITEM_SLOT_NAME = name + 'CollectionItemSlot';\n  const ITEM_DATA_ATTR = 'data-radix-collection-item';\n\n  type CollectionItemSlotProps = ItemData & {\n    children: React.ReactNode;\n    scope: any;\n  };\n\n  const CollectionItemSlot = React.forwardRef<ItemElement, CollectionItemSlotProps>(\n    (props, forwardedRef) => {\n      const { scope, children, ...itemData } = props;\n      const ref = React.useRef<ItemElement>(null);\n      const composedRefs = useComposedRefs(forwardedRef, ref);\n      const context = useCollectionContext(ITEM_SLOT_NAME, scope);\n\n      React.useEffect(() => {\n        context.itemMap.set(ref, { ref, ...(itemData as unknown as ItemData) });\n        return () => void context.itemMap.delete(ref);\n      });\n\n      return (\n        <Slot {...{ [ITEM_DATA_ATTR]: '' }} ref={composedRefs}>\n          {children}\n        </Slot>\n      );\n    }\n  );\n\n  CollectionItemSlot.displayName = ITEM_SLOT_NAME;\n\n  /* -----------------------------------------------------------------------------------------------\n   * useCollection\n   * ---------------------------------------------------------------------------------------------*/\n\n  function useCollection(scope: any) {\n    const context = useCollectionContext(name + 'CollectionConsumer', scope);\n\n    const getItems = React.useCallback(() => {\n      const collectionNode = context.collectionRef.current;\n      if (!collectionNode) return [];\n      const orderedNodes = Array.from(collectionNode.querySelectorAll(`[${ITEM_DATA_ATTR}]`));\n      const items = Array.from(context.itemMap.values());\n      const orderedItems = items.sort(\n        (a, b) => orderedNodes.indexOf(a.ref.current!) - orderedNodes.indexOf(b.ref.current!)\n      );\n      return orderedItems;\n    }, [context.collectionRef, context.itemMap]);\n\n    return getItems;\n  }\n\n  return [\n    { Provider: CollectionProvider, Slot: CollectionSlot, ItemSlot: CollectionItemSlot },\n    useCollection,\n    createCollectionScope,\n  ] as const;\n}\n\nexport { createCollection };\nexport type { CollectionProps };\n","/// <reference types=\"resize-observer-browser\" />\n\nimport * as React from 'react';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\n\nfunction useSize(element: HTMLElement | null) {\n  const [size, setSize] = React.useState<{ width: number; height: number } | undefined>(undefined);\n\n  useLayoutEffect(() => {\n    if (element) {\n      // provide size as early as possible\n      setSize({ width: element.offsetWidth, height: element.offsetHeight });\n\n      const resizeObserver = new ResizeObserver((entries) => {\n        if (!Array.isArray(entries)) {\n          return;\n        }\n\n        // Since we only observe the one element, we don't need to loop over the\n        // array\n        if (!entries.length) {\n          return;\n        }\n\n        const entry = entries[0];\n        let width: number;\n        let height: number;\n\n        if ('borderBoxSize' in entry) {\n          const borderSizeEntry = entry['borderBoxSize'];\n          // iron out differences between browsers\n          const borderSize = Array.isArray(borderSizeEntry) ? borderSizeEntry[0] : borderSizeEntry;\n          width = borderSize['inlineSize'];\n          height = borderSize['blockSize'];\n        } else {\n          // for browsers that don't support `borderBoxSize`\n          // we calculate it ourselves to get the correct border box.\n          width = element.offsetWidth;\n          height = element.offsetHeight;\n        }\n\n        setSize({ width, height });\n      });\n\n      resizeObserver.observe(element, { box: 'border-box' });\n\n      return () => resizeObserver.unobserve(element);\n    } else {\n      // We only want to reset to `undefined` when the element becomes `null`,\n      // not if it changes to another element.\n      setSize(undefined);\n    }\n  }, [element]);\n\n  return size;\n}\n\nexport { useSize };\n","import * as React from 'react';\n\nfunction usePrevious<T>(value: T) {\n  const ref = React.useRef({ value, previous: value });\n\n  // We compare values before making an update to ensure that\n  // a change has been made. This ensures the previous value is\n  // persisted correctly between renders.\n  return React.useMemo(() => {\n    if (ref.current.value !== value) {\n      ref.current.previous = ref.current.value;\n      ref.current.value = value;\n    }\n    return ref.current.previous;\n  }, [value]);\n}\n\nexport { usePrevious };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from '../../../../utils/memo.mjs';\nimport { supportsFlags } from './supports-flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo-supports.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\nimport { generateLinearEasing } from './utils/linear.mjs';\nimport { supportsLinearEasing } from './utils/supports-linear-easing.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { progress } from '../../../../utils/progress.mjs';\n\n// Create a linear easing point for every 10 ms\nconst resolution = 10;\nconst generateLinearEasing = (easing, duration // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","import { memo } from '../../../../utils/memo.mjs';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { attachTimeline } from './waapi/utils/attach-timeline.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsLinearEasing } from './waapi/utils/supports-linear-easing.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { startWaapiAnimation };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition } from '../utils/get-value-transition.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.11.10\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/get-value-transition.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[`${pointType}X`],\n            y: event[`${pointType}Y`],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = useCallback(() => onExitComplete && onExitComplete(id), [id, onExitComplete]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { secondsToMilliseconds } from './time-conversion.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { getValueTransition } from '../../animation/utils/get-value-transition.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { animateMotionValue } from '../interfaces/motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback) {\n            frame.postRender(() => callback(event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                const handler = !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel\n                    : onTap;\n                if (handler) {\n                    frame.update(() => handler(endEvent, endInfo));\n                }\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.postRender(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.postRender(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.postRender(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { transformPropOrder } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.11.10\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.11.10 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","const noop = (any) => any;\n\nexport { noop };\n","import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nfunction useAnimationFrame(callback) {\n    const initialTimestamp = useRef(0);\n    const { isStatic } = useContext(MotionConfigContext);\n    useEffect(() => {\n        if (isStatic)\n            return;\n        const provideTimeSinceStart = ({ timestamp, delta }) => {\n            if (!initialTimestamp.current)\n                initialTimestamp.current = timestamp;\n            callback(timestamp - initialTimestamp.current, delta);\n        };\n        frame.update(provideTimeSinceStart, true);\n        return () => cancelFrame(provideTimeSinceStart);\n    }, [callback]);\n}\n\nexport { useAnimationFrame };\n"],"names":["Label","React","props","forwardedRef","jsx","Primitive","label","ref","onMouseDown","event","target","closest","defaultPrevented","detail","preventDefault","displayName","Root","reduce","primitive","node","Node","asChild","primitiveProps","Comp","Slot","window","Symbol","for","clamp","value","_ref","min","max","Math","composeEventHandlers","originalEventHandler","ourEventHandler","checkForDefaultPrevented","arguments","length","undefined","composeContextScopes","_len","scopes","Array","_key","baseScope","createScope","scopeHooks","map","createScope2","useScope","scopeName","overrideScopes","nextScopes","nextScopes2","useCallbackRef","callback","callbackRef","current","args","useControllableState","prop","defaultProp","onChange","uncontrolledProp","setUncontrolledProp","_ref2","uncontrolledState","prevValueRef","handleChange","useUncontrolledState","isControlled","nextValue","value2","DirectionContext","useLayoutEffect2","Boolean","globalThis","document","PAGE_KEYS","ARROW_KEYS","BACK_KEYS","SLIDER_NAME","Collection","useCollection","createCollectionScope","name","PROVIDER_NAME","createCollectionContext","createContextScopeDeps","defaultContexts","scopeContexts","defaultContext","scope","contexts","rootComponentName","BaseContext","index","Provider","children","context","Context","Object","values","consumerName","Error","createContextScope","CollectionProviderImpl","useCollectionContext","collectionRef","itemMap","Map","CollectionProvider","COLLECTION_SLOT_NAME","CollectionSlot","composedRefs","useComposedRefs","ITEM_SLOT_NAME","ITEM_DATA_ATTR","CollectionItemSlot","itemData","set","delete","ItemSlot","collectionNode","orderedNodes","from","querySelectorAll","sort","a","b","indexOf","createCollection","createSliderContext","createSliderScope","SliderProvider","useSliderContext","Slider","step","orientation","disabled","minStepsBetweenThumbs","defaultValue","onValueChange","onValueCommit","inverted","form","sliderProps","thumbRefs","Set","valueIndexToChangeRef","SliderOrientation","SliderHorizontal","SliderVertical","setValues","thumbs","focus","valuesBeforeSlideStartRef","updateValues","atIndex","commit","decimalCount","String","split","getDecimalCount","snapToStep","rounder","pow","round","roundValue","prevValues","nextValues","getNextSortedValues","minStepsBetweenValues","stepsBetweenValues","slice","getStepsBetweenValues","hasMinStepsBetweenValues","hasChanged","__scopeSlider","onPointerDown","onSlideStart","closestIndex","distances","abs","closestDistance","getClosestValueIndex","onSlideMove","onSlideEnd","prevValue","onHomeKeyDown","onEndKeyDown","onStepKeyDown","direction","stepDirection","multiplier","includes","key","shiftKey","SliderOrientationProvider","useSliderOrientationContext","startEdge","endEdge","size","dir","slider","setSlider","rectRef","localDir","globalDir","useDirection","isDirectionLTR","isSlidingFromLeft","getValueFromPointer","pointerPosition","rect","getBoundingClientRect","linearScale","width","left","SliderImpl","style","clientX","isBackKey","sliderRef","isSlidingFromBottom","height","top","clientY","span","onKeyDown","concat","setPointerCapture","pointerId","has","onPointerMove","hasPointerCapture","onPointerUp","releasePointerCapture","TRACK_NAME","SliderTrack","trackProps","RANGE_NAME","SliderRange","rangeProps","valuesCount","percentages","convertValueToPercentage","offsetStart","offsetEnd","THUMB_NAME","SliderThumb","getItems","thumb","setThumb","findIndex","item","SliderThumbImpl","thumbProps","isFormControl","element","setSize","useLayoutEffect","offsetWidth","offsetHeight","resizeObserver","ResizeObserver","entries","isArray","entry","borderSizeEntry","borderSize","observe","box","unobserve","useSize","percent","totalValues","getLabel","orientationSize","thumbInBoundsOffset","halfWidth","offset","getThumbInBoundsOffset","add","jsxs","transform","position","role","tabIndex","display","onFocus","BubbleInput","inputProps","previous","usePrevious","input","inputProto","HTMLInputElement","prototype","setValue","getOwnPropertyDescriptor","Event","bubbles","call","dispatchEvent","output","ratio","Track","Range","Thumb","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","stepsOrder","maxElapsed","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","flagRunNextFrame","steps","acc","thisFrame","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","schedule","queue","cancel","process","frameData","clear","forEach","createRenderStep","read","resolveKeyframes","update","preRender","render","postRender","processBatch","MotionGlobalConfig","useManualTiming","performance","now","keepAlive","immediate","i","frame","cancelFrame","frameSteps","requestAnimationFrame","noop","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","get","_target","isAnimationControls","v","start","isKeyframesTarget","shallowCompare","next","prev","prevLength","isVariantLabel","getValueState","visualElement","getVelocity","resolveVariantFromProps","definition","custom","velocity","variants","resolveVariant","getProps","variantPriorityOrder","variantProps","transformPropOrder","transformProps","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","type","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","keyframes","startsWith","sqrt","getValueTransition","transition","instantAnimationState","isNotNull","getFinalKeyframe","finalKeyframe","repeat","repeatType","resolvedKeyframes","filter","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","binarySubdivide","mirrorEasing","easing","reverseEasing","backOut","backIn","backInOut","anticipate","circIn","sin","acos","circOut","circInOut","isZeroValueString","test","warning","invariant","isNumericalString","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","trim","splitCSSVariableRegex","getVariableValue","depth","fallback","match","exec","token1","token2","parseCSSVariable","resolved","getComputedStyle","getPropertyValue","trimmed","parseFloat","number","parse","alpha","scale","default","createUnitType","unit","endsWith","degrees","px","vh","vw","progressPercentage","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3","paddingLeft","paddingRight","_ref4","_ref5","y","paddingTop","paddingBottom","_ref6","_ref7","bottom","_ref8","_ref9","right","_ref10","_ref11","translateX","translateY","testValueType","dimensionValueTypes","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","transformsToRestore","removedTransforms","getValue","push","removeNonTranslationalTransform","measureInitialState","restore","_a","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","constructor","unresolvedKeyframes","onComplete","motionValue","isAsync","this","isComplete","scheduleResolve","currentValue","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","sanitize","floatRegex","singleColorRegex","isColorString","testProp","isNullish","hasOwnProperty","splitColor","aName","bName","cName","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","replace","parsedValue","parseComplexValue","createTransformer","source","numSections","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","functionRegex","functions","join","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","padding","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateZ","z","perspective","transformPerspective","opacity","originX","originY","originZ","int","numberValueTypes","zIndex","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","origin","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isGenerator","clearTime","time","newTime","queueMicrotask","isAnimatable","canAnimate","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","BaseAnimation","autoplay","delay","repeatDelay","options","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","onUpdate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","Promise","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","e","f","initialGuess","result","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","keys","some","spring","restDelta","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easeIn","easeOut","easeInOut","isBezierDefinition","easingLookup","linear","easingDefinitionToFunction","x1","y1","x2","y2","combineFunctions","pipe","transformers","progress","to","toFromDifference","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","interpolate","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","splice","frameloopDriver","passTimestamp","stop","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","startTime","teardown","onStop","KeyframeResolver$1","onResolved","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","generator","Infinity","calcGeneratorDuration","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","onPlay","stopDriver","acceleratedValues","memo","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","supportsLinearEasing","createElement","animate","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasing","generateLinearEasing","points","numPoints","segmentEasing","attachTimeline","animation","timeline","onfinish","supportsWaapi","Element","unsupportedEasingFunctions","AcceleratedAnimation","owner","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","startWaapiAnimation","pendingTimeline","playbackRate","playState","sampleTime","setWithVelocity","supports","HTMLElement","supportsScrollTimeline","ScrollTimeline","GroupPlaybackControls","animations","runAll","onResolve","onReject","all","catch","getAll","propName","setAll","newValue","subscriptions","methodName","controls","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","skipAnimations","addUniqueItem","removeItem","SubscriptionManager","handler","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","init","_this","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","setMotionValue","hasValue","addValue","camelToDash","str","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","isMotionValue","addValueToWillChange","willChange","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","child","animateChildren","first","last","sortNodePosition","numVariantProps","getVariantContext","isControllingVariants","parent","initial","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","isMounted","id","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","isPrimaryPointer","pointerType","button","isPrimary","extractEventInfo","pointType","point","addDomEvent","passive","addEventListener","removeEventListener","addPointerEvent","addPointerInfo","PanSession","handlers","contextWindow","dragSnapToOrigin","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","drag","openHorizontal","openVertical","isDragActive","openGestureLock","isRefObject","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","instance","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","WeakMap","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","root","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","transformTemplate","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","PresenceContext","LayoutGroupContext","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","microtask","cancelMicrotask","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","defaultScaleCorrectors","assign","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","useContext","useId","useEffect","useCallback","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","compareByDepth","FlatTree","isDirty","resolveMotionValue","unwrappedValue","toValue","timeout","checkElapsed","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","SVGElement","tagName","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","pan","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","addHoverEvent","callbackName","handleEvent","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","observers","fireObserverCallback","fireAllObserverCallbacks","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","tap","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTap","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","onTapStart","removePointerListener","removeFocusListener","isFocusVisible","matches","onBlur","hover","MotionContext","isBrowser","useIsomorphicLayoutEffect","LazyContext","strict","useVisualElement","visualState","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","useRef","renderer","initialLayoutGroupConfig","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","useMotionRef","externalRef","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","features","loadFeatures","ForwardRefMotionComponent","forwardRef","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","getProjectionFunctionality","layoutGroupId","lowercaseSVGElements","isSVGComponent","renderHTML","vars","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","attrs","setAttribute","isForcedMotionValue","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","charAt","makeUseVisualState","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","createHtmlRenderState","createSvgRenderState","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","dimensions","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","tag","svgMotionConfig","getBBox","htmlMotionConfig","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","createMotionComponentFactory","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","motion","createDomVisualElement","any","useAnimationFrame","initialTimestamp","provideTimeSinceStart"],"sourceRoot":""}